#import and use of usual python modules
import os
print (os.name)

from shellpython import config as config
config.PRINT_ALL_COMMANDS = True
config.COLORAMA_ENABLED = True

# import from shellpy module
from commoncode.common import common_func

# iteration over command output
for line in `ls -l`:
    # print of output with local variable capture
    print(`echo LINE IS: {line}`)

# return code capture
s = `ls -l | grep non_existent_string
if s.returncode == 0:
    print('string found')
else:
    print('string not found')

if not s:
    print('short form return code checking')

# execution of function from imported module
print('Result of imported function is ' + str(common_func()))

# several commands on one line
print('It should be False: ' + str(`echo 1` == `echo 2`))
print('It should be True: ' + str(`echo 1` == `echo 1`))

# multiline execution with result capture
f = `
echo Line one of multiline with capture
echo Line two of multiline with capture
`
print(f)

# split one long command to several lines
a = `echo \
    This is a \
    long command \
    on several lines

print(a)

# all commands with 'p' param which means print
x = p`echo 1
p`echo {x}`

p`echo \
    This is a \
    long command \
    on several lines

p`
echo Line one of multiline
echo Line two of multiline
`

# std error stream test

e`ls -l /non_existent_directory
x = `ls -l /non_existent_directory2
print(x.stderr_text())

# escaped

p`echo 'escaped'